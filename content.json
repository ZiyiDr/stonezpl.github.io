{"pages":[{"title":"tags","text":"#ddd","link":"/tags/index.html"}],"posts":[{"title":"zookeeper入门篇(一)","text":"一、ZOOKEEPER介绍简介 Zookeeper致力于提供一个高性能、高可用，且具备严格的顺序访问控制能力的分布式协调服务。 设计目标 简单的数据结构:共享的树形结构，类似文件系统，存储于内存; 可以构建集群:避免单点故障，3-5台机器就可以组成集群，超过半数，正常工作就能对外提供服务; 顺序访问:对于每个写请求，zk会分配一个全局唯一的递增编号，利用 这个特性可以实现高级协调服务; 高性能:基于内存操作，服务于非事务请求，适用于读操作为主的业务 场景。3台zk集群能达到13w QPS; 应用场景 数据发布订阅 负载均衡 命名服务 Master选举 集群管理 配置管理 分布式队列 分布式锁 二、zookeeper特性会话(session):客户端与服务端的一次会话连接，本质是TCP长连接，通过会话可以进行心跳检测和数据传输; 数据节点(znode) 持久节点(PERSISTENT) 持久顺序节点(PERSISTENT_SEQUENTIAL) 临时节点(EPHEMERAL) 临时顺序节点(EPHEMERAL_SEQUENTIAL)对于持久节点和临时节点，同一个znode下，节点的名称是唯一的:[center red 20px] Watcher 事件监听器:客户端可以在节点上注册监听器，当特定的事件发生后，zk会通知到感兴趣的客户端。EventType: NodeCreated、NodeDeleted、NodeDataChanged、NodeChildrenChange ACL:Zk采用ACL(access control lists)策略来控制权限，5中权限:create,read,write,delete,admin","link":"/2019/03/27/zookeeper-md/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/03/21/hello-world/"}],"tags":[],"categories":[]}